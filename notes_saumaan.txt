settings.py

_AzureOpenAISettings -> 
	1. ensure_endpoint() ==> select endpoints for CHAT & RAG ==> f"https://{self.resource}.openai.azure.com"
	2. extract_embedding_dependency()  ==> embedding endpoints ==>  {
                    "type": "endpoint",
                    "endpoint": self.embedding_endpoint,
                    "authentication": {
                        "type": "system_assigned_managed_identity"
                    }
                }

_SearchCommonSettings -> RAG search ==> role_information: str = Field(
        default="You are an AI assistant that helps people find information.",
        validation_alias="AZURE_OPENAI_SYSTEM_MESSAGE"
    )



_AzureSearchSettings -> Azure AI Search uses SearchCommonSettings
	1. index -> to select index
	2. filename_column: Optional[str] = Field(default=None, exclude=True) ==> similar for metadata
	3. return -> return {
            "type": self._type,
            "parameters": parameters
        }


main.py
	1. init_openai_client() -> access AzureOpenAISettings() using ==> app_settings.azure_openai
	2. prepare_model_args() -> access AzureSearchSettings() for RAG using ==> app_settings.datasource



datasource:
{'type': 'azure_search',
 'parameters': {'top_n_documents': 5,
  'strictness': 3,
  'in_scope': True,
  'index_name': 'vector-1722575091744',
  'semantic_configuration': 'default',
  'query_type': 'vector',
  'endpoint': 'https://ssaaisearchservice.search.windows.net',
  'authentication': {'type': 'system_assigned_managed_identity'},
  'embedding_dependency': {'type': 'deployment_name',
   'deployment_name': 'ssaembedding'},
  'fields_mapping': {'content_fields': None,
   'title_field': None,
   'url_field': None,
   'filepath_field': None,
   'vector_fields': None},
  'allow_partial_result': False,
  'include_contexts': ['citations', 'intent'],
  'role_information': 'You are an AI assistant that helps people find information.'}}


model_args
{'messages': [{'role': 'user', 'content': 'Registering a PDM Link Server'}],
 'temperature': 0.0,
 'max_tokens': 800,
 'top_p': 1.0,
 'stop': None,
 'stream': True,
 'model': 'ssagpt4o',
 'user': '{"EndUserId": "00000000-0000-0000-0000-000000000000", "EndUserIdType": "EntraId", "SourceIp": "127.0.0.1", "SourceRequestHeaders": {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.0.0 Safari/537.36"}, "ConversationId": null}',
 'extra_body': {'data_sources': [{'type': 'azure_search',
    'parameters': {'top_n_documents': 5,
     'strictness': 3,
     'in_scope': True,
     'index_name': 'vector-1722575091744',
     'semantic_configuration': 'default',
     'query_type': 'vector',
     'endpoint': 'https://ssaaisearchservice.search.windows.net',
     'authentication': {'type': 'system_assigned_managed_identity'},
     'embedding_dependency': {'type': 'deployment_name',
      'deployment_name': 'ssaembedding'},
     'fields_mapping': {'content_fields': None,
      'title_field': None,
      'url_field': None,
      'filepath_field': None,
      'vector_fields': None},
     'allow_partial_result': False,
     'include_contexts': ['citations', 'intent'],
     'role_information': 'You are an AI assistant that helps people find information.'}}]}}


azure_openai_client = await init_openai_client()
raw_response = await azure_openai_client.chat.completions.with_raw_response.create(**model_args)
apim_request_id = raw_response.headers.get("apim-request-id")



model_args -> send_chat_request -> stream_chat_request -> conversation_internal -> @bp.route("/conversation", methods=["POST"])



stream_chat_request ==> output 
 {'id': '4582c32d-4b79-4a51-8bef-b66f8b4defa5', 'model': 'gpt-4o', 'created': 1725776239, 'object': 'extensions.chat.completion.chunk', 'choices': [{'messages': [{'role': 'assistant', 'content': ' You'}]}], 'history_metadata': {}, 'apim-request-id': '7158a2fd-1195-4971-8978-7adaa28a0742'}


format_as_ndjson to above and input to quart's make_response

 {"id": "37932ce0-ca00-443a-8d27-5982b139b808", "model": "gpt-4o", "created": 1725776494, "object": "extensions.chat.completion.chunk", "choices": [{"messages": [{"role": "assistant", "content": " you"}]}], "history_metadata": {}, "apim-request-id": "ef47ff74-2721-4410-8f0d-66bc68394e6c"}
